buildscript {
  repositories {
    jcenter()
  }
  dependencies {
    classpath 'com.android.tools.build:gradle:2.3.3'
  }
}

apply plugin: 'com.android.application'

import org.gradle.internal.logging.text.StyledTextOutput.Style
import org.gradle.internal.logging.text.StyledTextOutputFactory
def gitVersion = {
  def version = "git describe --dirty".execute().text.trim();
  if (version.indexOf('dirty') != -1) {
    services
      .get(StyledTextOutputFactory)
      .create("dirty")
      .withStyle(Style.Failure)
      .println("ATTENTION dirty build with version: '${version}'")
  }
  return version;
}

android {
  defaultConfig {
    versionCode 17
    versionName gitVersion()
  }
}

dependencies {
  compile 'com.android.support:appcompat-v7:23.2.0'
  compile 'com.android.support:design:23.2.0'
  testCompile 'junit:junit:4.12'
  testCompile 'org.hamcrest:hamcrest-core:1.3'
  testCompile 'org.assertj:assertj-core:2.5.0'
}

// from http://stackoverflow.com/a/22597752
def passwordFromKeychain = { name ->
  def proc = ["security", "find-generic-password", "-s", name, "-a", name, "-w"].execute()
  proc.waitFor()
  def stdout = proc.in.text
  return stdout.trim()
}

android {
  compileSdkVersion 23
  buildToolsVersion "26.0.0"

  defaultConfig {
    minSdkVersion 21
    targetSdkVersion 23
  }
  signingConfigs {
    release {
      storeFile file("store/regexer-release.keystore")
      storePassword passwordFromKeychain("play-store-keystore-password")
      keyAlias "regexer"
      keyPassword passwordFromKeychain("play-store-keystore-password")
    }
  }
  buildTypes {
    release {
      signingConfig signingConfigs.release
      resValue "string", "app_name", "Regexer"
    }
    debug {
      applicationIdSuffix ".debug"
      resValue "string", "app_name", "Regexer-Debug"
    }
  }
  testOptions.unitTests.all {
    testLogging {
      events 'passed', 'skipped', 'failed', 'standardOut', 'standardError'
    }
  }
  lintOptions {
    abortOnError false
  }
}
